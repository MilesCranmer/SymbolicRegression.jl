import{_ as l,C as p,c as r,o as h,j as i,aA as n,a as e,G as a,w as o}from"./chunks/framework.CH9FaX74.js";const w=JSON.parse('{"title":"Customization","description":"","frontmatter":{},"headers":[],"relativePath":"customization.md","filePath":"customization.md","lastUpdated":null}'),d={name:"customization.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""};function C(A,s,_,S,x,D){const t=p("Badge");return h(),r("div",null,[s[40]||(s[40]=i("h1",{id:"Customization",tabindex:"-1"},[e("Customization "),i("a",{class:"header-anchor",href:"#Customization","aria-label":'Permalink to "Customization {#Customization}"'},"​")],-1)),s[41]||(s[41]=i("p",null,"Many parts of SymbolicRegression.jl are designed to be customizable.",-1)),s[42]||(s[42]=i("p",null,"The normal way to do this in Julia is to define a new type that subtypes an abstract type from a package, and then define new methods for the type, extending internal methods on that type.",-1)),s[43]||(s[43]=i("h2",{id:"Custom-Options",tabindex:"-1"},[e("Custom Options "),i("a",{class:"header-anchor",href:"#Custom-Options","aria-label":'Permalink to "Custom Options {#Custom-Options}"'},"​")],-1)),s[44]||(s[44]=i("p",null,"For example, you can define a custom options type:",-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"SymbolicRegression.CoreModule.OptionsStructModule.AbstractOptions",href:"#SymbolicRegression.CoreModule.OptionsStructModule.AbstractOptions"},[i("span",{class:"jlbinding"},"SymbolicRegression.CoreModule.OptionsStructModule.AbstractOptions")],-1)),s[1]||(s[1]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n("",8)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/OptionsStruct.jl#L115-L165",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[45]||(s[45]=i("p",null,"Any function in SymbolicRegression.jl you can generally define a new method on your custom options type, to define custom behavior.",-1)),s[46]||(s[46]=i("h2",{id:"Custom-Mutations",tabindex:"-1"},[e("Custom Mutations "),i("a",{class:"header-anchor",href:"#Custom-Mutations","aria-label":'Permalink to "Custom Mutations {#Custom-Mutations}"'},"​")],-1)),s[47]||(s[47]=i("p",null,[e("You can define custom mutation operators by defining a new method on "),i("code",null,"mutate!"),e(", as well as subtyping "),i("code",null,"AbstractMutationWeights"),e(":")],-1)),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"SymbolicRegression.MutateModule.mutate!",href:"#SymbolicRegression.MutateModule.mutate!"},[i("span",{class:"jlbinding"},"SymbolicRegression.MutateModule.mutate!")],-1)),s[5]||(s[5]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=n("",7)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/Mutate.jl#L381-L414",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[8]||(s[8]=i("a",{id:"SymbolicRegression.CoreModule.MutationWeightsModule.AbstractMutationWeights",href:"#SymbolicRegression.CoreModule.MutationWeightsModule.AbstractMutationWeights"},[i("span",{class:"jlbinding"},"SymbolicRegression.CoreModule.MutationWeightsModule.AbstractMutationWeights")],-1)),s[9]||(s[9]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=n("",12)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/MutationWeights.jl#L5-L67",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[12]||(s[12]=i("a",{id:"SymbolicRegression.MutateModule.condition_mutation_weights!",href:"#SymbolicRegression.MutateModule.condition_mutation_weights!"},[i("span",{class:"jlbinding"},"SymbolicRegression.MutateModule.condition_mutation_weights!")],-1)),s[13]||(s[13]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=n("",6)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/Mutate.jl#L85-L100",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[16]||(s[16]=i("a",{id:"SymbolicRegression.CoreModule.MutationWeightsModule.sample_mutation",href:"#SymbolicRegression.CoreModule.MutationWeightsModule.sample_mutation"},[i("span",{class:"jlbinding"},"SymbolicRegression.CoreModule.MutationWeightsModule.sample_mutation")],-1)),s[17]||(s[17]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=i("p",null,"Sample a mutation, given the weightings.",-1)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/MutationWeights.jl#L135",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[20]||(s[20]=i("a",{id:"SymbolicRegression.MutateModule.MutationResult",href:"#SymbolicRegression.MutateModule.MutationResult"},[i("span",{class:"jlbinding"},"SymbolicRegression.MutateModule.MutationResult")],-1)),s[21]||(s[21]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=n("",7)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/Mutate.jl#L45-L63",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[48]||(s[48]=i("h2",{id:"Custom-Expressions",tabindex:"-1"},[e("Custom Expressions "),i("a",{class:"header-anchor",href:"#Custom-Expressions","aria-label":'Permalink to "Custom Expressions {#Custom-Expressions}"'},"​")],-1)),s[49]||(s[49]=i("p",null,[e("You can create your own expression types by defining a new type that extends "),i("code",null,"AbstractExpression"),e(".")],-1)),i("details",m,[i("summary",null,[s[24]||(s[24]=i("a",{id:"DynamicExpressions.ExpressionModule.AbstractExpression",href:"#DynamicExpressions.ExpressionModule.AbstractExpression"},[i("span",{class:"jlbinding"},"DynamicExpressions.ExpressionModule.AbstractExpression")],-1)),s[25]||(s[25]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=n("",5)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/SymbolicML/DynamicExpressions.jl/blob/v2.3.0/src/Expression.jl#L54-L68",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[50]||(s[50]=i("p",null,[e("The interface is fairly flexible, and permits you define specific functional forms, extra parameters, etc. See the documentation of DynamicExpressions.jl for more details on what methods you need to implement. You can test the implementation of a given interface by using "),i("code",null,"ExpressionInterface"),e(" which makes use of "),i("code",null,"Interfaces.jl"),e(":")],-1)),i("details",b,[i("summary",null,[s[28]||(s[28]=i("a",{id:"DynamicExpressions.InterfacesModule.ExpressionInterface",href:"#DynamicExpressions.InterfacesModule.ExpressionInterface"},[i("span",{class:"jlbinding"},"DynamicExpressions.InterfacesModule.ExpressionInterface")],-1)),s[29]||(s[29]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[31]||(s[31]=n("",8)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/rafaqz/Interfaces.jl/blob/v0.3.2/src/interface.jl#L86-L94",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[51]||(s[51]=n("",5)),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"SymbolicRegression.SearchUtilsModule.AbstractRuntimeOptions",href:"#SymbolicRegression.SearchUtilsModule.AbstractRuntimeOptions"},[i("span",{class:"jlbinding"},"SymbolicRegression.SearchUtilsModule.AbstractRuntimeOptions")],-1)),s[33]||(s[33]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=n("",5)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/SearchUtils.jl#L54-L69",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[36]||(s[36]=i("a",{id:"SymbolicRegression.SearchUtilsModule.AbstractSearchState",href:"#SymbolicRegression.SearchUtilsModule.AbstractSearchState"},[i("span",{class:"jlbinding"},"SymbolicRegression.SearchUtilsModule.AbstractSearchState")],-1)),s[37]||(s[37]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[39]||(s[39]=n("",6)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/MilesCranmer/SymbolicRegression.jl/blob/cb709a4ebb8838634cf43f9f08885ef1da983c02/src/SearchUtils.jl#L558-L575",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[52]||(s[52]=i("p",null,"These let you include custom state variables and runtime options.",-1))])}const T=l(d,[["render",C]]);export{w as __pageData,T as default};
